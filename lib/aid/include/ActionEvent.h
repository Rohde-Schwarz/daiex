/*
	* Copyright (c) Rohde & Schwarz
	*
	* Licensed under the Apache License, Version 2.0 (the "License");
	* you may not use this file except in compliance with the License.
	* You may obtain a copy of the License at
	*
	*     http://www.apache.org/licenses/LICENSE-2.0
	*
	* Unless required by applicable law or agreed to in writing, software
	* distributed under the License is distributed on an "AS IS" BASIS,
	* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	* See the License for the specific language governing permissions and
	* limitations under the License.
	*/

#ifndef ACTION_EVENT_H
#define ACTION_EVENT_H

/* INCLUDE FILES ******************************************************************/
#include <string>
#include "Object.h"
#include "Types.h"

namespace AmlabCommon
{
  class CActionEventTest;

  /* CLASS DECLARATION **************************************************************/
  /*!
  * @brief  An event which indicates that a component-defined action occured.
  *
  *         This high-level event is generated by a component when a component-specific
  *         action occurs. The event is passed to an ActionListener object
  *         that is registered to receive such events. 
  *
  * @see IActionListener
  ***********************************************************************************/
  class CActionEvent
  {
  public:
    friend class CActionEventTest;

    CActionEvent(CObject* a_pSource, int32 a_i32EventId, std::wstring a_strCommand);

    ~CActionEvent();
    
    CObject* getSource() const;
    int32 getId() const;
    const std::wstring& getCommand() const;
    void setCommand( const std::wstring& a_command );

  protected:
    CActionEvent();
    CActionEvent(const CActionEvent&);
    CActionEvent& operator=(const CActionEvent&);

  private:
    CObject*      m_pSource;      /*!< The object that originated the event. */
    int32         m_i32EventId;   /*!< An integer that identifies the event. */
    std::wstring  m_strCommand;   /*!< A string that specifies a command associated with the event. */
  };
}

#endif  // not ACTION_EVENT_H

/**********************************************************************************/
/* END OF FILE                                                                    */
/**********************************************************************************/
